apiVersion: v1
kind: Namespace
metadata:
  name: bj-nginx
  labels:
    name: bj-nginx

---
apiVersion: v1
kind: Secret
metadata:
  name: harborsecret120
  namespace: bj-nginx
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxNzIuMjkuMTQxLjEyMCI6IHsKCQkJImF1dGgiOiAiYkdsMWREQXdNanBRY21sdVkyVXhNREF6IgoJCX0KCX0KfQ==
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-nginx02-pv
  namespace: bj-nginx
spec:
  storageClassName: nfs-nginx02
  capacity:
    storage: 10Mi
  accessModes:
  - ReadWriteMany
  nfs:
    path: /data/nfs_data01
    server: 172.29.141.23

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: bj-nginx
  name: nfs-nginx02-pvc
spec:
  storageClassName: nfs-nginx02
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bj-nginx02-deployment
  namespace: bj-nginx
  labels:
    app: bj-nginx02
    version: bj-nginx02-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bj-nginx02
  template:
    metadata:
      labels:
        app: bj-nginx02
    spec:
      imagePullSecrets:
      - name: harborsecret120
      containers:
      - name: bj-nginx02
        image: 172.29.141.120/lt/nagix:1.21.5
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
          name: tcp80
        volumeMounts:
        - name: nginxvolume
          mountPath: /usr/share/nginx/html
      volumes:
      - name: nginxvolume
        persistentVolumeClaim:
          claimName: nfs-nginx02-pvc

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bj-nginx02
  name: bj-nginx02-service
  namespace: bj-nginx
spec:
  type: LoadBalancer
  loadBalancerIP: 172.29.141.56
  ports:
  - name: tcp80
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: bj-nginx02
